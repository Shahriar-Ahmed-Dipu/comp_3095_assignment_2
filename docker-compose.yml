#
#services:
#  room-service:
#    build: ./RoomService
#    ports:
#      - "8087:8081"  # Exposing room service API
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://room-db:5432/roomdb
#      - SPRING_DATASOURCE_USERNAME=admin
#      - SPRING_DATASOURCE_PASSWORD=password
#    depends_on:
#      - room-db
#    networks:
#      - app-network
#
#  user-service:
#    build: ./UserService
#    ports:
#      - "8090:8090" # Exposing user service API
#
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
#      - SPRING_DATASOURCE_USERNAME=admin
#      - SPRING_DATASOURCE_PASSWORD=password
#    depends_on:
#      - user-db
#    networks:
#      - app-network
#
#
#  event-service:
#    build: ./EventService
#    ports:
#      - "8084:8084"
#    depends_on:
#      - mongo-db
#    networks:
#      - app-network
#
#  approval-service:
#    build: ./ApprovalService
#    ports:
#      - "8085:8085"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://approval-db:5432/approvaldb
#      - SPRING_DATASOURCE_USERNAME=admin
#      - SPRING_DATASOURCE_PASSWORD=password
#    depends_on:
#      - approval-db
#    networks:
#      - app-network
#
#  room-db:
#    image: postgres:latest
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_DB: roomdb
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: password
#    networks:
#      - app-network
#
#  user-db:
#    image: postgres:latest
#    ports:
#      - "5433:5432"
#    environment:
#      POSTGRES_DB: userdb
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: password
#    networks:
#      - app-network
#
#  approval-db:
#    image: postgres:latest
#    ports:
#      - "5434:5432"
#    environment:
#      POSTGRES_DB: approvaldb
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: password
#    networks:
#      - app-network
#
#  mongo-db:
#    image: mongo:latest
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=admin
#      - MONGO_INITDB_ROOT_PASSWORD=password
#    networks:
#      - app-network
#
#  mongo-express:
#    image: mongo-express:latest
#    ports:
#      - "8086:8081"
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
#      - ME_CONFIG_MONGODB_SERVER=mongo-db
#    networks:
#      - app-network
#
#  pgadmin:
#    image: dpage/pgadmin4:latest
#    ports:
#      - "8888:80"
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
#      - PGADMIN_DEFAULT_PASSWORD=password
#    container_name: pgadmin-container
#    networks:
#      - app-network
#
#  kafka:
#    image: wurstmeister/kafka:latest
#    environment:
#      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT  # Define the security protocol
#      KAFKA_LISTENERS: INSIDE_KAFKA://kafka:9093  # Kafka's internal listener
#      KAFKA_ADVERTISED_LISTENER: INSIDE_KAFKA://kafka:9093  # Kafka's advertised listener
#      KAFKA_LISTENER_NAME_INSIDE_KAFKA: INSIDE_KAFKA
#      KAFKA_LISTENER_PORT: 9093
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Connect to Zookeeper
#      KAFKA_LISTENER_INTERNAL: INSIDE_KAFKA
#    ports:
#      - "9093:9093"
#    depends_on:
#      - zookeeper
#    networks:
#      - app-network
#
#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    ports:
#      - "2181:2181"  # Zookeeper port
#    networks:
#      - app-network
#
#  schema-registry:
#    image: confluentinc/cp-schema-registry:latest
#    environment:
#      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=kafka:9093  # Kafka broker URL
#      - SCHEMA_REGISTRY_LISTENER_HTTP_PORT=8081
#      - SCHEMA_REGISTRY_LISTENER_HTTP_HOSTNAME=0.0.0.0
#      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9093  # Kafka broker URL
#      - SCHEMA_REGISTRY_LISTENER_NAME=http
#      - SCHEMA_REGISTRY_HOST_NAME=schema-registry  # Added required varia
#    ports:
#      - "8081:8081"
#    depends_on:
#      - kafka
#    networks:
#      - app-network
#
#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: password
#      KEYCLOAK_HTTP_PORT: 8080
#      DB_VENDOR: POSTGRES
#      DB_ADDR: keycloak-db
#      DB_PORT: 5432
#      DB_DATABASE: keycloak
#      DB_USER: keycloak
#      DB_PASSWORD: password
#    ports:
#      - "8085:8080"  # Expose the Keycloak admin console
#    depends_on:
#      - keycloak-db
#    networks:
#      - app-network
#
#  keycloak-db:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password
#    networks:
#      - app-network
#
#networks:
#  app-network:
#    driver: bridge
#
#
#
#
#
#
#

version: '3.8'

services:
  room-service:
    build: ./RoomService
    ports:
      - "8087:8081"  # Exposing room service API
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://room-db:5432/roomdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      - room-db
    networks:
      - app-network

  user-service:
    build: ./UserService
    ports:
      - "8096:8096"  # Exposing user service API
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      - user-db
    networks:
      - app-network

  event-service:
    build: ./EventService
    ports:
      - "8084:8084"
    depends_on:
      - mongo-db
    networks:
      - app-network

  approval-service:
    build: ./ApprovalService
    ports:
      - "8089:8089"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://approval-db:5432/approvaldb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      - approval-db
    networks:
      - app-network

  room-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: roomdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  user-db:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  approval-db:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: approvaldb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  mongo-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8086:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo-db
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      - PGADMIN_DEFAULT_PASSWORD=password
    container_name: pgadmin-container
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT  # Define the security protocol
      KAFKA_LISTENERS: INSIDE_KAFKA://kafka:9093  # Kafka's internal listener
      KAFKA_ADVERTISED_LISTENER: INSIDE_KAFKA://kafka:9093  # Kafka's advertised listener
      KAFKA_LISTENER_NAME_INSIDE_KAFKA: INSIDE_KAFKA
      KAFKA_LISTENER_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Connect to Zookeeper
      KAFKA_LISTENER_INTERNAL: INSIDE_KAFKA
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"  # Zookeeper port
    networks:
      - app-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=kafka:9093  # Kafka broker URL
      - SCHEMA_REGISTRY_LISTENER_HTTP_PORT=8081
      - SCHEMA_REGISTRY_LISTENER_HTTP_HOSTNAME=0.0.0.0
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9093  # Kafka broker URL
      - SCHEMA_REGISTRY_LISTENER_NAME=http
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry  # Added required variable
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_HTTP_PORT: 8080
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
    ports:
      - "8085:8080"  # Expose the Keycloak admin console
    depends_on:
      - keycloak-db
    networks:
      - app-network

  keycloak-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  api-gateway:
    image: api-gateway
    ports:
      - "9000:9000"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    container_name: api-gateway
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
